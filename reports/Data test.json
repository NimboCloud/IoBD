{"paragraphs":[{"text":"import org.apache.commons.io.IOUtils\r\nimport java.net.URL\r\nimport java.nio.charset.Charset\r\n\r\n// Zeppelin creates and injects sc (SparkContext) and sqlContext (HiveContext or SqlContext)\r\n// So you don't need create them manually\r\n\r\n// load bank data\r\nval bankText = sc.parallelize(\r\n    IOUtils.toString(\r\n        new URL(\"https://s3.amazonaws.com/apache-zeppelin/tutorial/bank/bank.csv\"),\r\n        Charset.forName(\"utf8\")).split(\"\\n\"))\r\n\r\nval copaText = sc.parallelize(\r\n    IOUtils.toString(\r\n        new URL(\"https://s3.amazonaws.com/bdt-iobd-blog/copa-america-historical/copa_america_historical_data.csv\"),\r\n        Charset.forName(\"utf8\")).split(\"\\n\"))\r\n//https://s3.amazonaws.com/bdt-iobd-blog/copa-america-historical/copa_america_historical_data.csv\r\n\r\n // load map data\r\n val myMapText = sc.parallelize(\r\n     IOUtils.toString(\r\n         new URL(\"https://gist.githubusercontent.com/Madhuka/74cb9a6577c87aa7d2fd/raw/2f758d33d28ddc01c162293ad45dc16be2806a6b/data.csv\"),\r\n         Charset.forName(\"utf8\")).split(\"\\n\"))\r\n\r\ncase class Copa(Country Name:String,Country Code:String,Series Name:String,Series Code:String,1990 [YR1990]: Float,2000 [YR2000]: Float,2006 [YR2006]: Float,2007 [YR2007]: Float,2008 [YR2008]: Float,2009 [YR2009]: Float,2010 [YR2010]: Float,2011 [YR2011]: Float,2012 [YR2012]: Float,2013 [YR2013]: Float,2014 [YR2014]: Float,2015 [YR2015]: Float)\r\n\r\nval myCopa = myCopaText.map(s=>s.split(\",\")).filter(s=>s(0)!=\"Country Name\").map(\r\n  s=>Map(s(0), \r\n          s(1),\r\n          s(2),\r\n          s(3),\r\n          s(4).toFloat,\r\n          s(5).toFloat,\r\n          s(6).toFloat,\r\n          s(7).toFloat,\r\n          s(8).toFloat,\r\n          s(9).toFloat,\r\n          s(10).toFloat,\r\n          s(11).toFloat,\r\n          s(12).toFloat,\r\n          s(13).toFloat,\r\n          s(14).toFloat,\r\n          s(15).toFloat\r\n      )\r\n \r\n \r\ncase class Map(Country:String, Name:String, lat : Float, lan : Float, Altitude : Float)\r\n  \r\nval myMap = myMapText.map(s=>s.split(\",\")).filter(s=>s(0)!=\"Country\").map(\r\n  s=>Map(s(0), \r\n          s(1),\r\n          s(2).toFloat,\r\n          s(3).toFloat,\r\n          s(4).toFloat\r\n      )\r\n \r\ncase class Bank(age: Integer, job: String, marital: String, education: String, balance: Integer)\r\n\r\nval bank = bankText.map(s => s.split(\";\")).filter(s => s(0) != \"\\\"age\\\"\").map(\r\n    s => Bank(s(0).toInt, \r\n            s(1).replaceAll(\"\\\"\", \"\"),\r\n            s(2).replaceAll(\"\\\"\", \"\"),\r\n            s(3).replaceAll(\"\\\"\", \"\"),\r\n            s(5).replaceAll(\"\\\"\", \"\").toInt\r\n        )\r\n).toDF()\r\nbank.registerTempTable(\"bank\")\r\n\r\nval copa = copaText.map(s => s.split(\";\")).filter(s => s(0) != \"\\\"age\\\"\").map(\r\n    s => Bank(s(0).toInt, \r\n            s(1).replaceAll(\"\\\"\", \"\"),\r\n            s(2).replaceAll(\"\\\"\", \"\"),\r\n            s(3).replaceAll(\"\\\"\", \"\"),\r\n            s(5).replaceAll(\"\\\"\", \"\").toInt\r\n        )\r\n).toDF()\r\nbank.registerTempTable(\"bank\")\r\n","dateUpdated":"Jun 25, 2016 12:45:17 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466856938456_309185618","id":"20160625-121538_267235421","result":{"code":"ERROR","type":"TEXT","msg":"import org.apache.commons.io.IOUtils\nimport java.net.URL\nimport java.nio.charset.Charset\nbankText: org.apache.spark.rdd.RDD[String] = ParallelCollectionRDD[15] at parallelize at <console>:41\ncopaText: org.apache.spark.rdd.RDD[String] = ParallelCollectionRDD[16] at parallelize at <console>:37\nmyMapText: org.apache.spark.rdd.RDD[String] = ParallelCollectionRDD[17] at parallelize at <console>:39\n<console>:2: error: ':' expected but identifier found.\n       case class Copa(Country Name:String,Country Code:String,Series Name:String,Series Code:String,1990 [YR1990]: Float,2000 [YR2000]: Float,2006 [YR2006]: Float,2007 [YR2007]: Float,2008 [YR2008]: Float,2009 [YR2009]: Float,2010 [YR2010]: Float,2011 [YR2011]: Float,2012 [YR2012]: Float,2013 [YR2013]: Float,2014 [YR2014]: Float,2015 [YR2015]: Float)\n                               ^\n"},"dateCreated":"Jun 25, 2016 12:15:38 PM","dateStarted":"Jun 25, 2016 12:45:17 PM","dateFinished":"Jun 25, 2016 12:45:20 PM","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:447"},{"text":"%sql \r\nselect age, count(1) value\r\nfrom bank \r\nwhere age < 30 \r\ngroup by age \r\norder by age\r\n","dateUpdated":"Jun 25, 2016 12:45:17 PM","config":{"colWidth":12,"graph":{"mode":"lineChart","height":300,"optionOpen":false,"keys":[{"name":"age","index":0,"aggr":"sum"}],"values":[{"name":"value","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"age","index":0,"aggr":"sum"},"yAxis":{"name":"value","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466856938458_309955115","id":"20160625-121538_651172654","result":{"code":"SUCCESS","type":"TABLE","msg":"age\tvalue\n19\t4\n20\t3\n21\t7\n22\t9\n23\t20\n24\t24\n25\t44\n26\t77\n27\t94\n28\t103\n29\t97\n","comment":"","msgTable":[[{"key":"value","value":"19"},{"key":"value","value":"4"}],[{"value":"20"},{"value":"3"}],[{"value":"21"},{"value":"7"}],[{"value":"22"},{"value":"9"}],[{"value":"23"},{"value":"20"}],[{"value":"24"},{"value":"24"}],[{"value":"25"},{"value":"44"}],[{"value":"26"},{"value":"77"}],[{"value":"27"},{"value":"94"}],[{"value":"28"},{"value":"103"}],[{"value":"29"},{"value":"97"}]],"columnNames":[{"name":"age","index":0,"aggr":"sum"},{"name":"value","index":1,"aggr":"sum"}],"rows":[["19","4"],["20","3"],["21","7"],["22","9"],["23","20"],["24","24"],["25","44"],["26","77"],["27","94"],["28","103"],["29","97"]]},"dateCreated":"Jun 25, 2016 12:15:38 PM","dateStarted":"Jun 25, 2016 12:45:18 PM","dateFinished":"Jun 25, 2016 12:45:31 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:448"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466857291317_1156896882","id":"20160625-122131_1284742967","dateCreated":"Jun 25, 2016 12:21:31 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:449","dateUpdated":"Jun 25, 2016 12:45:17 PM","dateFinished":"Jun 25, 2016 12:45:31 PM","dateStarted":"Jun 25, 2016 12:45:20 PM","result":{"code":"SUCCESS","type":"TEXT"}}],"name":"Data test","id":"2BPPZR8QP","angularObjects":{"2B44YVSN1":[],"2AJXGMUUJ":[],"2AK8P7CPX":[],"2AM1YV5CU":[],"2AKK3QQXU":[],"2ANGGHHMQ":[]},"config":{"looknfeel":"default"},"info":{}}