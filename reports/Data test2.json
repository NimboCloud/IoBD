{"paragraphs":[{"text":"import org.apache.commons.io.IOUtils\r\nimport java.net.URL\r\nimport java.nio.charset.Charset\r\n\r\n// Zeppelin creates and injects sc (SparkContext) and sqlContext (HiveContext or SqlContext)\r\n// So you don't need create them manually\r\n\r\nval copaText = sc.parallelize(\r\n    IOUtils.toString(\r\n        new URL(\"https://s3.amazonaws.com/bdt-iobd-blog/copa-america-historical/copa_america_historical_data2.csv\"),\r\n        Charset.forName(\"utf8\")).split(\"\\n\"))\r\n\r\n      \r\ncase class Copa(\r\n    Country_Name:String,\r\n    Country_Code:String,\r\n    Series_Name:String,\r\n    Series_Code:String,\r\n    YR1990: Float,\r\n    YR2000: Float,\r\n    YR2006: Float,\r\n    YR2007: Float,\r\n    YR2008: Float,\r\n    YR2009: Float,\r\n    YR2010: Float,\r\n    YR2011: Float,\r\n    YR2012: Float,\r\n    YR2013: Float,\r\n    YR2014: Float,\r\n    YR2015: Float)\r\n\r\nval myCopa = copaText.map(s=>s.split(\",\")).filter(s=>s(0)!=\"\\\"Country_Name\\\"\").map(\r\n  s=>Map(s(0), \r\n          s(1),\r\n          s(2),\r\n          s(3),\r\n          s(4).toFloat,\r\n          s(5).toFloat,\r\n          s(6).toFloat,\r\n          s(7).toFloat,\r\n          s(8).toFloat,\r\n          s(9).toFloat,\r\n          s(10).toFloat,\r\n          s(11).toFloat,\r\n          s(12).toFloat,\r\n          s(13).toFloat,\r\n          s(14).toFloat,\r\n          s(15).toFloat\r\n      )\r\n ).toDF()\r\nmyCopa.registerTempTable(\"myCopa\")\r\n \r\n\r\n \r\n","dateUpdated":"Jun 25, 2016 3:07:50 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466866129711_-149437681","id":"20160625-144849_2088524767","result":{"code":"ERROR","type":"TEXT","msg":"import org.apache.commons.io.IOUtils\nimport java.net.URL\nimport java.nio.charset.Charset\ncopaText: org.apache.spark.rdd.RDD[String] = ParallelCollectionRDD[21] at parallelize at <console>:80\ndefined class Copa\n<console>:82: error: too many arguments for method apply: (Country: String, Name: String, lat: Float, lan: Float, Altitude: Float)Map in object Map\n         s=>Map(s(0), \n               ^\n"},"dateCreated":"Jun 25, 2016 2:48:49 PM","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:20","dateFinished":"Jun 25, 2016 3:07:51 PM","dateStarted":"Jun 25, 2016 3:07:50 PM","focus":true},{"dateUpdated":"Jun 25, 2016 3:07:50 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466866129713_-139434210","id":"20160625-144849_1066350108","result":{"code":"SUCCESS","type":"TEXT"},"dateCreated":"Jun 25, 2016 2:48:49 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:22","dateFinished":"Jun 25, 2016 3:07:51 PM","dateStarted":"Jun 25, 2016 3:07:50 PM"}],"name":"Data test","id":"2BR9QCMA8","angularObjects":{"2B44YVSN1":[],"2AJXGMUUJ":[],"2AK8P7CPX":[],"2AM1YV5CU":[],"2AKK3QQXU":[],"2ANGGHHMQ":[]},"config":{"looknfeel":"default"},"info":{}}