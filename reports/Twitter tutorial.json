{"paragraphs":[{"text":"%dep\r\nz.reset\r\nz.load(\"org.apache.spark:spark-streaming-twitter_2.10:1.5.1\")\r\n\r\nimport org.apache.spark.streaming._\r\nimport org.apache.spark.streaming.twitter_\r\nimport org.apache.spark.storage.StorageLevel\r\nimport scala.io.Source\r\nimport scala.collection.mutable.HashMap\r\nimport java.io.File\r\nimport org.apache.log4j.Logger\r\nimport org.apache.log4j.Level\r\nimport sys.process.stringSeqToProcess\r\n\r\n/** Configures the Oauth Credentials for accessing Twitter */\r\ndef configureTwitterCredentials(apiKey: String, apiSecret: String, accessToken: String, accessTokenSecret: String) {\r\n  val configs = new HashMap[String, String] ++= Seq(\r\n    \"apiKey\" -> apiKey, \"apiSecret\" -> apiSecret, \"accessToken\" -> accessToken, \"accessTokenSecret\" -> accessTokenSecret)\r\n  println(\"Configuring Twitter OAuth\")\r\n  configs.foreach{ case(key, value) =>\r\n    if (value.trim.isEmpty) {\r\n      throw new Exception(\"Error setting authentication - value for \" + key + \" not set\")\r\n    }\r\n    val fullKey = \"twitter4j.oauth.\" + key.replace(\"api\", \"consumer\")\r\n    System.setProperty(fullKey, value.trim)\r\n    println(\"\\tProperty \" + fullKey + \" set as [\" + value.trim + \"]\")\r\n  }\r\n println()\r\n}\r\n// Configure Twitter credentials\r\nval apiKey = \"3d3mzM4jvhSAH7wwT9ie5WnSK\"\r\nval apiSecret = \"yyU4ulR33sdaxnbzTa1vvT55317inQV7rI6dVHJw8JrsZSu6Rs\"\r\nval accessToken = \"741104332951715840-kiGQvtxFFBulx5T5WfpDicnv6iH1yiZ\"\r\nval accessTokenSecret = \"dXYMLnd3j3K1QRaIY5zyQ8i9Id4AXa4ojATZzc7worFVS\"\r\nconfigureTwitterCredentials(apiKey, apiSecret, accessToken, accessTokenSecret)\r\n\r\nval ssc = new StreamingContext(sc, Seconds(2))\r\nval tweets = TwitterUtils.createStream(ssc, None)\r\nval twt = tweets.window(Seconds(60))\r\n\r\ncase class Tweet(createdAt:Long, text:String)\r\ntwt.map(status=>\r\n  Tweet(status.getCreatedAt().getTime()/1000, status.getText())\r\n).foreachRDD(rdd=>\r\n  // Below line works only in spark 1.3.0.\r\n  // For spark 1.1.x and spark 1.2.x,\r\n  // use rdd.registerTempTable(\"tweets\") instead.\r\n  rdd.toDF().registerAsTable(\"tweets\")\r\n)\r\n\r\ntwt.print\r\n\r\nssc.start()","dateUpdated":"Jun 23, 2016 10:07:58 AM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":false,"editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466611732051_-920697879","id":"20160622-160852_1589172311","result":{"code":"ERROR","type":"TEXT","msg":"dep\r interpreter not found"},"dateCreated":"Jun 22, 2016 4:08:52 PM","dateStarted":"Jun 22, 2016 9:27:07 PM","dateFinished":"Jun 22, 2016 9:27:12 PM","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:194","errorMessage":""},{"dateUpdated":"Jun 23, 2016 10:07:58 AM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466612659825_-1322487410","id":"20160622-162419_1754333077","result":{"code":"SUCCESS","type":"TEXT"},"dateCreated":"Jun 22, 2016 4:24:19 PM","dateStarted":"Jun 23, 2016 10:07:58 AM","dateFinished":"Jun 23, 2016 10:07:58 AM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:195"}],"name":"Twitter tutorial","id":"2BNSHGYTF","angularObjects":{"2B44YVSN1":[],"2AJXGMUUJ":[],"2AK8P7CPX":[],"2AM1YV5CU":[],"2AKK3QQXU":[],"2ANGGHHMQ":[]},"config":{"looknfeel":"default"},"info":{}}