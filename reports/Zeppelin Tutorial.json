{"paragraphs":[{"text":"%md\n## Welcome to Zeppelin.\n##### This is a live tutorial, you can run the code yourself. (Shift-Enter to Run)","dateUpdated":"Jun 25, 2016 3:49:46 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorHide":true,"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1423836981412_-1007008116","id":"20150213-231621_168813393","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Welcome to Zeppelin.</h2>\n<h5>This is a live tutorial, you can run the code yourself. (Shift-Enter to Run)</h5>\n"},"dateCreated":"Feb 13, 2015 11:16:21 PM","dateStarted":"Jun 25, 2016 3:49:46 PM","dateFinished":"Jun 25, 2016 3:49:46 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4527"},{"title":"Load data into table","text":"import org.apache.commons.io.IOUtils\nimport java.net.URL\nimport java.nio.charset.Charset\n\n// Zeppelin creates and injects sc (SparkContext) and sqlContext (HiveContext or SqlContext)\n// So you don't need create them manually\n\n// load bank data\nval bankText = sc.parallelize(\n    IOUtils.toString(\n        new URL(\"https://s3.amazonaws.com/apache-zeppelin/tutorial/bank/bank.csv\"),\n        Charset.forName(\"utf8\")).split(\"\\n\"))\n\ncase class Bank(age: Integer, job: String, marital: String, education: String, balance: Integer)\n\nval bank = bankText.map(s => s.split(\";\")).filter(s => s(0) != \"\\\"age\\\"\").map(\n    s => Bank(s(0).toInt, \n            s(1).replaceAll(\"\\\"\", \"\"),\n            s(2).replaceAll(\"\\\"\", \"\"),\n            s(3).replaceAll(\"\\\"\", \"\"),\n            s(5).replaceAll(\"\\\"\", \"\").toInt\n        )\n).toDF()\nbank.registerTempTable(\"bank\")\n\nval copaText = sc.parallelize(\n    IOUtils.toString(\n        new URL(\"https://s3.amazonaws.com/bdt-iobd-blog/copa-america-historical/copa_america_historical_data2.csv\"),\n        Charset.forName(\"utf8\")).split(\"\\n\"))\n\n      \ncase class Copa(\n    Country_Name:String,\n    Country_Code:String,\n    Series_Name:String,\n    Series_Code:String,\n    YR1990: Float,\n    YR2000: Float,\n    YR2006: Float,\n    YR2007: Float,\n    YR2008: Float,\n    YR2009: Float,\n    YR2010: Float,\n    YR2011: Float,\n    YR2012: Float,\n    YR2013: Float,\n    YR2014: Float,\n    YR2015: Float)\n\nval myCopa = copaText.map(s=>s.split(\",\")).filter(s=>s(0)!=\"\\\"Country_Name\\\"\").map(\n  s=>Copa(s(0), \n          s(1),\n          s(2),\n          s(3),\n          s(4).toFloat,\n          s(5).toFloat,\n          s(6).toFloat,\n          s(7).toFloat,\n          s(8).toFloat,\n          s(9).toFloat,\n          s(10).toFloat,\n          s(11).toFloat,\n          s(12).toFloat,\n          s(13).toFloat,\n          s(14).toFloat,\n          s(15).toFloat\n      )\n ).toDF()\nmyCopa.registerTempTable(\"myCopa\")\n ","dateUpdated":"Jun 25, 2016 3:49:46 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"title":true,"enabled":true,"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1423500779206_-1502780787","id":"20150210-015259_1403135953","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.commons.io.IOUtils\nimport java.net.URL\nimport java.nio.charset.Charset\nbankText: org.apache.spark.rdd.RDD[String] = ParallelCollectionRDD[390] at parallelize at <console>:181\ndefined class Bank\nbank: org.apache.spark.sql.DataFrame = [age: int, job: string, marital: string, education: string, balance: int]\ncopaText: org.apache.spark.rdd.RDD[String] = ParallelCollectionRDD[395] at parallelize at <console>:177\ndefined class Copa\nmyCopa: org.apache.spark.sql.DataFrame = [Country_Name: string, Country_Code: string, Series_Name: string, Series_Code: string, YR1990: float, YR2000: float, YR2006: float, YR2007: float, YR2008: float, YR2009: float, YR2010: float, YR2011: float, YR2012: float, YR2013: float, YR2014: float, YR2015: float]\n"},"dateCreated":"Feb 10, 2015 1:52:59 AM","dateStarted":"Jun 25, 2016 3:49:46 PM","dateFinished":"Jun 25, 2016 3:49:49 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4528"},{"text":"%sql \nselect age, count(1) value \nfrom bank \nwhere age < ${maxAge=30} \ngroup by age \norder by age","dateUpdated":"Jun 25, 2016 3:49:46 PM","config":{"colWidth":4,"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"age","index":0,"aggr":"sum"}],"values":[{"name":"value","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"age","index":0,"aggr":"sum"},"yAxis":{"name":"value","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/sql","editorHide":false},"settings":{"params":{"maxAge":"30"},"forms":{"maxAge":{"name":"maxAge","defaultValue":"30","hidden":false}}},"jobName":"paragraph_1423500782552_-1439281894","id":"20150210-015302_1492795503","result":{"code":"SUCCESS","type":"TABLE","msg":"age\tvalue\n19\t4\n20\t3\n21\t7\n22\t9\n23\t20\n24\t24\n25\t44\n26\t77\n27\t94\n28\t103\n29\t97\n","comment":"","msgTable":[[{"key":"value","value":"19"},{"key":"value","value":"4"}],[{"value":"20"},{"value":"3"}],[{"value":"21"},{"value":"7"}],[{"value":"22"},{"value":"9"}],[{"value":"23"},{"value":"20"}],[{"value":"24"},{"value":"24"}],[{"value":"25"},{"value":"44"}],[{"value":"26"},{"value":"77"}],[{"value":"27"},{"value":"94"}],[{"value":"28"},{"value":"103"}],[{"value":"29"},{"value":"97"}]],"columnNames":[{"name":"age","index":0,"aggr":"sum"},{"name":"value","index":1,"aggr":"sum"}],"rows":[["19","4"],["20","3"],["21","7"],["22","9"],["23","20"],["24","24"],["25","44"],["26","77"],["27","94"],["28","103"],["29","97"]]},"dateCreated":"Feb 10, 2015 1:53:02 AM","dateStarted":"Jun 25, 2016 3:49:46 PM","dateFinished":"Jun 25, 2016 3:49:59 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4529"},{"text":"%sql \nselect * from myCopa","dateUpdated":"Jun 25, 2016 3:50:29 PM","config":{"colWidth":4,"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"age","index":0,"aggr":"sum"}],"values":[{"name":"value","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"age","index":0,"aggr":"sum"},"yAxis":{"name":"value","index":1,"aggr":"sum"}}},"enabled":true,"editorMode":"ace/mode/sql"},"settings":{"params":{"maxAge":"35"},"forms":{}},"jobName":"paragraph_1423720444030_-1424110477","id":"20150212-145404_867439529","result":{"code":"ERROR","type":"TEXT","msg":"java.lang.NumberFormatException: For input string: \"1990 [YR1990]\"\n\tat sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1250)\n\tat java.lang.Float.parseFloat(Float.java:452)\n\tat scala.collection.immutable.StringLike$class.toFloat(StringLike.scala:231)\n\tat scala.collection.immutable.StringOps.toFloat(StringOps.scala:31)\n\tat $line316.$read$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$anonfun$3.apply(<console>:186)\n\tat $line316.$read$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$anonfun$3.apply(<console>:182)\n\tat scala.collection.Iterator$$anon$11.next(Iterator.scala:328)\n\tat scala.collection.Iterator$$anon$11.next(Iterator.scala:328)\n\tat scala.collection.Iterator$$anon$11.next(Iterator.scala:328)\n\tat scala.collection.Iterator$$anon$11.next(Iterator.scala:328)\n\tat scala.collection.Iterator$$anon$11.next(Iterator.scala:328)\n\tat scala.collection.Iterator$$anon$10.next(Iterator.scala:312)\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:727)\n\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1157)\n\tat scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)\n\tat scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:103)\n\tat scala.collection.mutable.ArrayBuffer.$plus$plus$eq(ArrayBuffer.scala:47)\n\tat scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)\n\tat scala.collection.AbstractIterator.to(Iterator.scala:1157)\n\tat scala.collection.TraversableOnce$class.toBuffer(TraversableOnce.scala:265)\n\tat scala.collection.AbstractIterator.toBuffer(Iterator.scala:1157)\n\tat scala.collection.TraversableOnce$class.toArray(TraversableOnce.scala:252)\n\tat scala.collection.AbstractIterator.toArray(Iterator.scala:1157)\n\tat org.apache.spark.sql.execution.SparkPlan$$anonfun$5.apply(SparkPlan.scala:212)\n\tat org.apache.spark.sql.execution.SparkPlan$$anonfun$5.apply(SparkPlan.scala:212)\n\tat org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:1858)\n\tat org.apache.spark.SparkContext$$anonfun$runJob$5.apply(SparkContext.scala:1858)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:66)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:89)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:214)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n"},"dateCreated":"Feb 12, 2015 2:54:04 PM","dateStarted":"Jun 25, 2016 3:50:29 PM","dateFinished":"Jun 25, 2016 3:50:30 PM","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:4530","focus":true},{"text":"%sql\r\nselect * from myCopa","dateUpdated":"Jun 25, 2016 3:49:46 PM","config":{"colWidth":4,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/sql","editorHide":false,"lineNumbers":true,"title":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1435955447812_-158639899","id":"20150703-133047_853701097","result":{"code":"ERROR","type":"TEXT","msg":"sql\r interpreter not found"},"dateCreated":"Jul 3, 2015 1:30:47 PM","dateStarted":"Jun 25, 2016 3:20:16 PM","dateFinished":"Jun 25, 2016 3:20:17 PM","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4531"},{"text":"%sql\r\nselect * from myCopa","dateUpdated":"Jun 25, 2016 3:49:46 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466869671144_-241676726","id":"20160625-154751_61101456","result":{"code":"ERROR","type":"TEXT","msg":"sql\r interpreter not found"},"dateCreated":"Jun 25, 2016 3:47:51 PM","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4532"},{"text":"%sql \nselect age, count(1) value \nfrom bank \nwhere marital=\"${marital=single,single|divorced|married}\" \ngroup by age \norder by age","dateUpdated":"Jun 25, 2016 3:49:46 PM","config":{"colWidth":4,"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"age","index":0,"aggr":"sum"}],"values":[{"name":"value","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"age","index":0,"aggr":"sum"},"yAxis":{"name":"value","index":1,"aggr":"sum"}}},"enabled":true,"title":false,"editorMode":"ace/mode/sql"},"settings":{"params":{"marital":"single"},"forms":{"marital":{"name":"marital","defaultValue":"single","options":[{"value":"single"},{"value":"divorced"},{"value":"married"}],"hidden":false}}},"jobName":"paragraph_1423836262027_-210588283","id":"20150213-230422_1600658137","result":{"code":"SUCCESS","type":"TABLE","msg":"age\tvalue\n19\t4\n20\t3\n21\t7\n22\t9\n23\t17\n24\t13\n25\t33\n26\t56\n27\t64\n28\t78\n29\t56\n30\t92\n31\t86\n32\t105\n33\t61\n34\t75\n35\t46\n36\t50\n37\t43\n38\t44\n39\t30\n40\t25\n41\t19\n42\t23\n43\t21\n44\t20\n45\t15\n46\t14\n47\t12\n48\t12\n49\t11\n50\t8\n51\t6\n52\t9\n53\t4\n55\t3\n56\t3\n57\t2\n58\t7\n59\t2\n60\t5\n66\t2\n69\t1\n","comment":"","msgTable":[[{"key":"value","value":"19"},{"key":"value","value":"4"}],[{"value":"20"},{"value":"3"}],[{"value":"21"},{"value":"7"}],[{"value":"22"},{"value":"9"}],[{"value":"23"},{"value":"17"}],[{"value":"24"},{"value":"13"}],[{"value":"25"},{"value":"33"}],[{"value":"26"},{"value":"56"}],[{"value":"27"},{"value":"64"}],[{"value":"28"},{"value":"78"}],[{"value":"29"},{"value":"56"}],[{"value":"30"},{"value":"92"}],[{"value":"31"},{"value":"86"}],[{"value":"32"},{"value":"105"}],[{"value":"33"},{"value":"61"}],[{"value":"34"},{"value":"75"}],[{"value":"35"},{"value":"46"}],[{"value":"36"},{"value":"50"}],[{"value":"37"},{"value":"43"}],[{"value":"38"},{"value":"44"}],[{"value":"39"},{"value":"30"}],[{"value":"40"},{"value":"25"}],[{"value":"41"},{"value":"19"}],[{"value":"42"},{"value":"23"}],[{"value":"43"},{"value":"21"}],[{"value":"44"},{"value":"20"}],[{"value":"45"},{"value":"15"}],[{"value":"46"},{"value":"14"}],[{"value":"47"},{"value":"12"}],[{"value":"48"},{"value":"12"}],[{"value":"49"},{"value":"11"}],[{"value":"50"},{"value":"8"}],[{"value":"51"},{"value":"6"}],[{"value":"52"},{"value":"9"}],[{"value":"53"},{"value":"4"}],[{"value":"55"},{"value":"3"}],[{"value":"56"},{"value":"3"}],[{"value":"57"},{"value":"2"}],[{"value":"58"},{"value":"7"}],[{"value":"59"},{"value":"2"}],[{"value":"60"},{"value":"5"}],[{"value":"66"},{"value":"2"}],[{"value":"69"},{"value":"1"}]],"columnNames":[{"name":"age","index":0,"aggr":"sum"},{"name":"value","index":1,"aggr":"sum"}],"rows":[["19","4"],["20","3"],["21","7"],["22","9"],["23","17"],["24","13"],["25","33"],["26","56"],["27","64"],["28","78"],["29","56"],["30","92"],["31","86"],["32","105"],["33","61"],["34","75"],["35","46"],["36","50"],["37","43"],["38","44"],["39","30"],["40","25"],["41","19"],["42","23"],["43","21"],["44","20"],["45","15"],["46","14"],["47","12"],["48","12"],["49","11"],["50","8"],["51","6"],["52","9"],["53","4"],["55","3"],["56","3"],["57","2"],["58","7"],["59","2"],["60","5"],["66","2"],["69","1"]]},"dateCreated":"Feb 13, 2015 11:04:22 PM","dateStarted":"Jun 25, 2016 3:49:59 PM","dateFinished":"Jun 25, 2016 3:50:01 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4533"},{"dateUpdated":"Jun 25, 2016 3:49:46 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1466868097662_55684912","id":"20160625-152137_1503738246","result":{"code":"SUCCESS","type":"TEXT"},"dateCreated":"Jun 25, 2016 3:21:37 PM","dateStarted":"Jun 25, 2016 3:50:00 PM","dateFinished":"Jun 25, 2016 3:50:01 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4534"}],"name":"Zeppelin Tutorial test","id":"2A94M5J1Z","angularObjects":{"2B44YVSN1":[],"2AJXGMUUJ":[],"2AK8P7CPX":[],"2AM1YV5CU":[],"2AKK3QQXU":[],"2ANGGHHMQ":[]},"config":{"looknfeel":"default"},"info":{}}z
